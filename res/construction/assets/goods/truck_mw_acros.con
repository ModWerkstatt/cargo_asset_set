local vec3 = require "vec3"
local transf = require "transf"

function data()
return { 
	type = "ASSET_DEFAULT",
	description = {
		name = _("LKW MB Acors MP3"),			
		description = _("desc_mw_lkw")
	},
	availability = {
					yearFrom = 2000,
					yearTo = 0
	},
	buildMode = "MULTI",
	categories = { "goods" },
	order = 223220212,
	skipCollision = true,
	autoRemovable = false,
	params = {
		{
			key = "position",
			name = _("name_position"),
			uiType = "BUTTON",
			values = { _("Standard"), _(" +15cm "), _(" +30cm "), _(" +90cm ") }
		},
		{
			key = "lkwacros",
			name = _("Typ"),
			uiType = "COMBOBOX",
			values = { 
			_("Acros Volllackiert mit Spoiler und Seitenschutz"),
			_("Acros Volllackiert ohne Spoiler und Seitenschutz"),
			_("Acros Teillackiert mit Spoiler und Seitenschutz"),
			_("Acros Teillackiert ohne Spoiler und Seitenschutz"),
			},
		},
		{
			 key = "cross_slope",
			 name = _("desc_longitudinal_slope"),
			 uiType = "SLIDER",
			 values = { _("-10°"), _("-9°"), _("-8°"), _("-7°"), _("-6°"), _("-5°"), _("-4°"), _("-3°"), _("-2°"), _("-1°"), _("0°"), _("1°"), _("2°"), _("3°"), _("4°"), _("5°"), _("6°"), _("7°"), _("8°"), _("9°"), _("10°"), },
			 defaultIndex = 10,
		},
		{
			 key = "longitudinal_slope",
			 name = _("desc_cross_slope"),
			 uiType = "SLIDER",
			 values = { _("-10°"), _("-9°"), _("-8°"), _("-7°"), _("-6°"), _("-5°"), _("-4°"), _("-3°"), _("-2°"), _("-1°"), _("0°"), _("1°"), _("2°"), _("3°"), _("4°"), _("5°"), _("6°"), _("7°"), _("8°"), _("9°"), _("10°"), },
			 defaultIndex = 10,
		},
		
		
	},
	updateFn = function(params)
		local result = { }
		result.models = {  }
		local height = 0
		if params.position == 1 then
			height = 0.15
		elseif params.position == 2 then
			height = 0.30
		elseif params.position == 3 then
			height = 0.90
		end
		
	local cross_slope = (-10 + params.cross_slope) * 2
    local longitudinal_slope = (-10 + params.longitudinal_slope) * 2
	
		if params.lkwacros== 0 then
					result.models[#result.models+1] =
					{ id = "asset/truck/mb_mp/mb_mp.mdl",
					transf = transf.scaleRotZYXTransl(vec3.new(1,1,1),transf.degToRad(180.0, cross_slope, longitudinal_slope), vec3.new(0, 0, height)) }
		end
		if params.lkwacros== 1 then
					result.models[#result.models+1] =
					{ id = "asset/truck/mb_mp/mb_mp2.mdl",
					transf = transf.scaleRotZYXTransl(vec3.new(1,1,1),transf.degToRad(180.0, cross_slope, longitudinal_slope), vec3.new(0, 0, height)) }
		end
		if params.lkwacros== 2 then
					result.models[#result.models+1] =
					{ id = "asset/truck/mb_mp/mb_mp3.mdl",
					transf = transf.scaleRotZYXTransl(vec3.new(1,1,1),transf.degToRad(180.0, cross_slope, longitudinal_slope), vec3.new(0, 0, height)) }
		end
		if params.lkwacros== 3 then
					result.models[#result.models+1] =
					{ id = "asset/truck/mb_mp/mb_mp4.mdl",
					transf = transf.scaleRotZYXTransl(vec3.new(1,1,1),transf.degToRad(180.0, cross_slope, longitudinal_slope), vec3.new(0, 0, height)) }
		end
		
		result.terrainAlignmentLists = { {
			type = "EQUAL",
			faces =  { }
		} }
		return result
	end
}
end